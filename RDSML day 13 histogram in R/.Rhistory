# adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19) + geom_smooth(method = lm
# adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19) + geom_smooth(method = lm)
# changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19)
)
# install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
View(dataset)
# generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point()
# changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19)
# adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19) + geom_smooth(method = lm)
# removing the confidence interval
ggplot(dataset, aes(x=wt, y=mpg)) + geom_point() + geom_smooth(method = lm, se = F)
# loess method
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
geom_smooth()
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) + geom_smooth(method = lm)
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dashed")
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dashed"
color = "red")
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dashed",
color = "red")
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dotted",
color = "red")
# changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm,
linetype = "dotted",
color = "red", fill = "light brown")
# changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm,
linetype = "dotted",
color = "red", fill = "blue")
# changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19, color = "brown") +
geom_smooth(method = lm,
linetype = "dotted",
color = "red", fill = "blue")
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# changing the point shapes by the levels of cyl
ggplot(dataset, aes(x=wt, y=mpg, shape=cyl)) +
geom_point()
# converting the cyl column froma numeric to factor variable
dataset$cyl = as.factor(dataset$cyl)
# changing point shapes and colors
ggplot(dataset, aes(x=wt, y=mpg,
shape=cyl, color = cyl)) +
geom_point()
# changing point shapes, colors and sizes
ggplot(dataset, aes(x=wt, y=mpg,
shape=cyl,
color = cyl
size = cyl)) +
# changing point shapes, colors and sizes
ggplot(dataset, aes(x=wt, y=mpg,
shape = cyl,
color = cyl,
size = cyl)) +
geom_point()
library(ggplot2)
dataset=mtcars
dataset$cyl = as.factor(dataset$cyl)
# multiple regression line
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point() +
geom_smooth(method = lm)
# multiple regression line
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm)
# removing confidence of interval
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm, se = F)
# extending the regression line
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm, se = F, fullrange = T)
# filling the color of confidence bands
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
aes(fill = cyl),
fullrange = T)
# filling the color of confidence bands
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
aes(fill = cyl))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se= F, fullrange=T)
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(16,3,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,3,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,11,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,13,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,18,19))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
theme(legend.position = "top")
# changing point shapes manually, placement of legend
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey"))
# changing point shapes and colors manually, placement of legend
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
theme(legend.position = "top")
# customizing scatter plots
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
labs(title = "Miles per gallon \n according to the weight") +
theme(legend.position = "top")
# customizing scatter plots
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
labs(title = "Miles per gallon \n according to the weight", x = "Weight", y = "Miles per Gallon") +
# \n : works as enter key
theme(legend.position = "top")
# customizing themes
plot = ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
labs(title = "Miles per gallon \n according to the weight", x = "Weight", y = "Miles per Gallon") +
# \n : works as enter key
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
setwd("D:/Softwares/GitHub/R-for-Data-Science-and-Machine-Learning/RDSML day 13 histogram in R")
# to test normality of data and distribution of data, basically used histogram
#importing the data set
dataset= read.csv('data.csv')
