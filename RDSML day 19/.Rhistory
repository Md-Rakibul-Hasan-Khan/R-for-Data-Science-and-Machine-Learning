# adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19) + geom_smooth(method = lm
# adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19) + geom_smooth(method = lm)
# changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19)
)
# install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
View(dataset)
# generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point()
# changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19)
# adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size=2, shape=19) + geom_smooth(method = lm)
# removing the confidence interval
ggplot(dataset, aes(x=wt, y=mpg)) + geom_point() + geom_smooth(method = lm, se = F)
# loess method
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
geom_smooth()
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) + geom_smooth(method = lm)
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dashed")
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dashed"
color = "red")
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dashed",
color = "red")
# change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm, linetype = "dotted",
color = "red")
# changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm,
linetype = "dotted",
color = "red", fill = "light brown")
# changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19) +
geom_smooth(method = lm,
linetype = "dotted",
color = "red", fill = "blue")
# changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape=19, color = "brown") +
geom_smooth(method = lm,
linetype = "dotted",
color = "red", fill = "blue")
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# changing the point shapes by the levels of cyl
ggplot(dataset, aes(x=wt, y=mpg, shape=cyl)) +
geom_point()
# converting the cyl column froma numeric to factor variable
dataset$cyl = as.factor(dataset$cyl)
# changing point shapes and colors
ggplot(dataset, aes(x=wt, y=mpg,
shape=cyl, color = cyl)) +
geom_point()
# changing point shapes, colors and sizes
ggplot(dataset, aes(x=wt, y=mpg,
shape=cyl,
color = cyl
size = cyl)) +
# changing point shapes, colors and sizes
ggplot(dataset, aes(x=wt, y=mpg,
shape = cyl,
color = cyl,
size = cyl)) +
geom_point()
library(ggplot2)
dataset=mtcars
dataset$cyl = as.factor(dataset$cyl)
# multiple regression line
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point() +
geom_smooth(method = lm)
# multiple regression line
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm)
# removing confidence of interval
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm, se = F)
# extending the regression line
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm, se = F, fullrange = T)
# filling the color of confidence bands
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
aes(fill = cyl),
fullrange = T)
# filling the color of confidence bands
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
aes(fill = cyl))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se= F, fullrange=T)
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(16,3,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,3,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,11,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,13,17))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,18,19))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19))
# changing point shapes manually
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
theme(legend.position = "top")
# changing point shapes manually, placement of legend
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey"))
# changing point shapes and colors manually, placement of legend
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
theme(legend.position = "top")
# customizing scatter plots
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
labs(title = "Miles per gallon \n according to the weight") +
theme(legend.position = "top")
# customizing scatter plots
ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
labs(title = "Miles per gallon \n according to the weight", x = "Weight", y = "Miles per Gallon") +
# \n : works as enter key
theme(legend.position = "top")
# customizing themes
plot = ggplot(dataset, aes(x = wt, y = mpg,
color = cyl,
shape = cyl)) +
geom_point() +
geom_smooth(method = lm,
se = F, fullrange= T ) +
scale_shape_manual(values = c(8,15,19)) +
scale_color_manual(values = c("black","orange","grey")) +
labs(title = "Miles per gallon \n according to the weight", x = "Weight", y = "Miles per Gallon") +
# \n : works as enter key
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
library(ggplot2)
dataset= mtcars
#converting numeric cyl column to a factor variable
dataset$cyl= as.factor(dataset$cyl)
#Adding regression lines based on multiple groups
ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl,))+
geom_point()+
geom_smooth(method=lm, se=F)
#Extending THE REGRESSION LINES TO THE EDGES OF THE PLOT
ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl,))+
geom_point()+
geom_smooth(method=lm, se=F, fullrange=TRUE)
#Filling the color of the confidence interval
ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl,))+
geom_point()+
geom_smooth(method=lm, aes (fill=cyl))
#Changing point shapes manually
ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl))+
geom_point()+
geom_smooth(method=lm, se=F, fullrange=TRUE)+
scale_shape_manual(values=c(3,16,17))
#changing the theme position
ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl))+
geom_point()+
geom_smooth(method=lm, se=F, fullrange=TRUE)+
scale_shape_manual(values=c(3,16,17))+
theme(legend.position='top')
#Changing point colors manually
ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl))+
geom_point()+
geom_smooth(method=lm, se=F, fullrange=TRUE)+
scale_shape_manual(values=c(3,16,17))+
scale_color_manual(values=c('brown', 'black', 'tan'))+
theme(legend.position='top')
#Customizing scatter plots
ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl))+
geom_point(size=3, alpha=0.7)+
geom_smooth(method=lm, se=F, fullrange=TRUE)+
scale_shape_manual(values=c(3,16,17))+
scale_color_manual(values=c('brown', 'black', 'tan'))+
theme(legend.position='top')+
labs(title='Miles per Gallon \nAccording to Weight',
x='Weight',
y='Miles per Gallon')+
theme_minimal()
#Customizing themes
plot=ggplot(dataset, aes(x=wt, y=mpg, color=cyl, shape= cyl))+
geom_point(size=3, alpha=0.7)+
geom_smooth(method=lm, se=F, fullrange=TRUE)+
scale_shape_manual(values=c(3,16,17))+
scale_color_manual(values=c('brown', 'black', 'tan'))+
theme(legend.position='top')+
labs(title='Scatter Plot of MPG vs Weight',
x='Weight (1000 lbs)',
y='Miles per Gallon (MPG)')+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 15),
axis.title.x = element_text(face = "italic", size = 10),
axis.title.y = element_text(face = "italic", size = 10))
# Display the plot
print(plot)
plot+ theme_classic()
plot+ theme_minimal()
setwd("D:/Softwares/GitHub/R-for-Data-Science-and-Machine-Learning/RDSML day 19")
# Loading the dataset
myData = ToothGrowth
# Converting the variable dose from a numeric to a factor variable
myData$dose = as.factor(myData$dose)
library(ggplot2)
# Basic boxplot
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot()
# Rotating the box plot
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot() +
coord_flip()
# Notched box plot
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot(notch = T)
# Changing outlier color, shape, and size
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8,
outlier.size = 3)
# Choosing which item to display
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8,
outlier.size = 3) +
scale_x_discrete(limits = c("2"))
# Changing box plot line colors by grous
ggplot(myData, aes(x = dose, y = len, color = dose)) +
geom_boxplot()
# Changing the item order
ggplot(myData, aes(x = dose, y = len, color = dose)) +
geom_boxplot() +
scale_x_discrete(limit = c("2", "0.5", "1"))
# Box plot with multiple groups
ggplot(myData, aes(x = dose, y = len, fill = supp)) +
geom_boxplot()
# changing the position
ggplot(myData, aes(x = dose, y = len, fill = supp)) +
geom_boxplot(position = position_dodge(1))
# changing the position
ggplot(myData, aes(x = dose, y = len, fill = supp)) +
geom_boxplot(position = position_dodge(2))
# changing the position
ggplot(myData, aes(x = dose, y = len, fill = supp)) +
geom_boxplot(position = position_dodge(1.2))
# changing the position
ggplot(myData, aes(x = dose, y = len, fill = supp)) +
geom_boxplot(position = position_dodge(1.1))
